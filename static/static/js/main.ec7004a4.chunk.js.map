{"version":3,"sources":["components/BaseLayout/index.js","components/Home.js","components/TypeA.js","components/TypeB.js","components/TypeC.js","components/TypeD.js","components/TypeE.js","components/TypeF.js","components/TypeG.js","components/TypeH.js","components/TypeI.js","components/TypeJ.js","components/TypeK.js","components/TypeL.js","App.js","serviceWorker.js","index.js"],"names":["BaseLayout","className","activeClassName","exact","to","this","props","children","Component","Home","state","data","currentlySelectedType","handleClick","currentItem","type","setState","axios","get","then","res","shuffledData","_","shuffle","countAll","length","map","item","key","id","onClick","React","TypeA","filter","countTypeA","TypeB","countTypeB","TypeC","countTypeC","TypeD","countTypeD","TypeE","countTypeE","TypeF","countTypeF","TypeG","countTypeG","TypeH","countTypeH","TypeI","countTypeI","TypeJ","countTypeJ","TypeK","countTypeK","TypeL","countTypeL","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec7004a4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './index.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default class BaseLayout extends Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                <nav className= 'navbar'>\r\n                    <div className='nav-links'>\r\n                        <ul>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/'>Home</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeA'>TypeA</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeB'>TypeB</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeC'>TypeC</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeD'>TypeD</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeE'>TypeE</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeF'>TypeF</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeG'>TypeG</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeH'>TypeH</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeI'>TypeI</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeJ'>TypeJ</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeK'>TypeK</NavLink></li>\r\n                            <li><NavLink activeClassName ='selected' className = 'nav-link' exact to='/typeL'>TypeL</NavLink></li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div>\r\n                    {this.props.children}\r\n                </div>\r\n\r\n                <div className='footer'>\r\n                    <p> @ 2020 Copyright Sufan Huang</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\n\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        data: [],\r\n        currentlySelectedType: ''\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n    handleClick = (currentItem)=> {\r\n        let currentlySelectedType = currentItem.type\r\n        this.setState({currentlySelectedType})\r\n    }\r\n\r\nrender(){\r\n    let { data, currentlySelectedType } = this.state\r\n    let shuffledData = _.shuffle(data)\r\n    const  countAll = data.length\r\n\r\n    return(\r\n        <div className= \"app\">\r\n            <h3> Total Count {countAll} </h3>\r\n            <div className= 'container'>\r\n                { shuffledData.map(item =>(\r\n                    <div key={item.id} className={`item ${ currentlySelectedType===(item.type)? 'type-selected' : ''}`} onClick={() =>this.handleClick(item)}>\r\n                        <h5>{ item.type }</h5>\r\n                        <h6>{ item.id }</h6>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Home\r\n\r\n/*\r\n    * onClick adds/removes item from state property currentlySelectedTypes\r\n    * onClick should also force re-render of all items\r\n    * Write your code below\r\n    * */\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeA extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeA = this.state.data.filter((item)=> item.type === 'typeA')\r\n        const  countTypeA = TypeA.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeA Count {countTypeA} </h3>\r\n                <div className= 'container'>\r\n                    { TypeA.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeA\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeB extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeB = this.state.data.filter((item)=> item.type === 'typeB')\r\n        const  countTypeB = TypeB.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeB Count {countTypeB} </h3>\r\n                <div className= 'container'>\r\n                    { TypeB.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeB\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeC extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeC = this.state.data.filter((item)=> item.type === 'typeC')\r\n        const  countTypeC = TypeC.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeC Count {countTypeC} </h3>\r\n                <div className= 'container'>\r\n                    { TypeC.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeC\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeD extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeD = this.state.data.filter((item)=> item.type === 'typeD')\r\n        const  countTypeD = TypeD.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeD Count {countTypeD} </h3>\r\n                <div className= 'container'>\r\n                    { TypeD.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeD\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeE extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeE = this.state.data.filter((item)=> item.type === 'typeE')\r\n        const  countTypeE = TypeE.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeE Count {countTypeE} </h3>\r\n                <div className= 'container'>\r\n                    { TypeE.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeE\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeF extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeF = this.state.data.filter((item)=> item.type === 'typeF')\r\n        const  countTypeF = TypeF.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeF Count {countTypeF} </h3>\r\n                <div className= 'container'>\r\n                    { TypeF.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeF\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeG extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeG = this.state.data.filter((item)=> item.type === 'typeG')\r\n        const  countTypeG = TypeG.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeG Count {countTypeG} </h3>\r\n                <div className= 'container'>\r\n                    { TypeG.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeG\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeH extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeH = this.state.data.filter((item)=> item.type === 'typeH')\r\n        const  countTypeH = TypeH.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeH Count {countTypeH} </h3>\r\n                <div className= 'container'>\r\n                    { TypeH.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeH\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeI extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeI = this.state.data.filter((item)=> item.type === 'typeI')\r\n        const  countTypeI = TypeI.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeI Count {countTypeI} </h3>\r\n                <div className= 'container'>\r\n                    { TypeI.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeI\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeJ extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeJ = this.state.data.filter((item)=> item.type === 'typeJ')\r\n        const  countTypeJ = TypeJ.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeJ Count {countTypeJ} </h3>\r\n                <div className= 'container'>\r\n                    { TypeJ.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeJ\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeK extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeK = this.state.data.filter((item)=> item.type === 'typeK')\r\n        const  countTypeK = TypeK.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeK Count {countTypeK} </h3>\r\n                <div className= 'container'>\r\n                    { TypeK.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeK\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nclass TypeL extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        axios.get('express_backend')\r\n            .then(res=>{\r\n                let data = res.data\r\n                this.setState({data})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        const TypeL = this.state.data.filter((item)=> item.type === 'typeL')\r\n        const  countTypeL = TypeL.length\r\n        return(\r\n            <div className= \"app\">\r\n                <h3> TypeL Count {countTypeL} </h3>\r\n                <div className= 'container'>\r\n                    { TypeL.map(item =>(\r\n                        <div key={item.id} className='item'>\r\n                            <h5>{ item.type }</h5>\r\n                            <h6>{ item.id }</h6>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TypeL\r\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport BaseLayout from './components/BaseLayout'\nimport Home from './components/Home'\nimport TypeA from './components/TypeA'\nimport TypeB from './components/TypeB'\nimport TypeC from './components/TypeC'\nimport TypeD from './components/TypeD'\nimport TypeE from './components/TypeE'\nimport TypeF from './components/TypeF'\nimport TypeG from './components/TypeG'\nimport TypeH from './components/TypeH'\nimport TypeI from './components/TypeI'\nimport TypeJ from './components/TypeJ'\nimport TypeK from './components/TypeK'\nimport TypeL from './components/TypeL'\n\n\n\nfunction App() {\n  return (\n      <div className = 'App'>\n        <BrowserRouter>\n          <BaseLayout>\n            <Switch>\n              <Route exact path = '/' component = {Home}/>\n              <Route exact path = '/typeA' component = {TypeA}/>\n              <Route exact path = '/typeB' component = {TypeB}/>\n              <Route exact path = '/typeC' component = {TypeC}/>\n              <Route exact path = '/typeD' component = {TypeD}/>\n              <Route exact path = '/typeE' component = {TypeE}/>\n                <Route exact path = '/typeF' component = {TypeF}/>\n                <Route exact path = '/typeG' component = {TypeG}/>\n                <Route exact path = '/typeH' component = {TypeH}/>\n                <Route exact path = '/typeI' component = {TypeI}/>\n                <Route exact path = '/typeJ' component = {TypeJ}/>\n                <Route exact path = '/typeK' component = {TypeK}/>\n                <Route exact path = '/typeL' component = {TypeL}/>\n\n\n\n            </Switch>\n          </BaseLayout>\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}